#!/bin/bash
# Установка и обновление пакетов.

# TODO: Опциональные зависимости для разработки под разные языки
# т.е. возможность отключить установку каких-то пакетов.

while getopts "ic" options; do
  case "${options}" in
    c)
      CONFIGURE=true
      ;;
    i)
      INSTALL_PACKAGES=true
      ;;
  esac
done

set -e
echo "Установка и обновление инструментов командной строки."

title ()
{
  echo -e "$(tput bold)$@$(tput sgr0)"
}

configure ()
{
  if ! grep -q /usr/local/bin/fish /etc/shells; then
    title "установка fish как shell по-умолчанию"
    sudo echo "/usr/local/bin/fish" >> /etc/shells
    sudo chsh -s /usr/local/bin/fish
  fi

  title "git: конфигурация"
  git config --global include.path "$HOME/.gitconfig.base"
  git config --global user.name shagohead
  git config --global user.email html.ru@gmail.com

  KITTY_PATH="$HOME/.config/kitty"
  KITTY_CONF="$HOME/kitty.conf"
  if [ -f $KITTY_CONF ]; then
    title "kitty: конфигурация"
    if ! grep -q "include custom.conf" $KITTY_CONF; then
      echo "include custom.conf" >> $KITTY_CONF
    fi
    if ! grep -q "include current-theme.conf" $KITTY_CONF; then
      cp "$KITTY_PATH/themes/base16-mexico-light.conf" "$KITTY_PATH/current-theme.conf"
      echo "include current-theme.conf" >> $KITTY_CONF
    fi
  fi

  title "fish: конфигурация"
  FISH_CONFIG_COMMAND="
  set fish_color_normal normal
  set fish_color_command blue
  set fish_color_param normal
  set fish_color_quote green
  set fish_color_redirection brmagenta
  set fish_color_error red
  set fish_color_end magenta
  set fish_color_comment brblack
  set fish_color_match --background=cyan
  set fish_color_selection green
  set fish_color_search_match --background=brblack
  set fish_color_operator magenta
  set fish_color_escape magenta
  set fish_color_cwd brblue
  set fish_color_autosuggestion -d
  set fish_color_user brcyan
  set fish_color_host brblue
  set fish_color_cancel brred

  set fish_pager_color_prefix white --underline
  set fish_pager_color_description bryellow
  set fish_pager_color_progress brcyan"
  fish -c "$FISH_CONFIG_COMMAND"
}

install_packages ()
{
  brew bundle
  [ ! -d "$HOME/.config/fish/conf.d" ] && mkdir $HOME/.config/fish/conf.d || echo "conf.d exists"
  [ ! -d "$HOME/.config/fish/completions" ] && mkdir $HOME/.config/fish/completions || echo "completions exists"
  stow dotfiles

  declare -a PIPX_PACKAGES=(
    black
    flake8
    httpie
    http-prompt
    ipython
    isort
    johnnydep
    poetry
  )
  title "pipx: установка пакетов"
  for i in "${PIPX_PACKAGES[@]}"; do
    pipx install $i
  done

  declare -a GO_PACKAGES=(
    golang.org/x/tools/gopls
    github.com/go-delve/delve/cmd/dlv
    github.com/kyleconroy/sqlc/cmd/sqlc
    honnef.co/go/tools/cmd/staticcheck
  )
  title "go: установка пакетов"
  for i in "${GO_PACKAGES[@]}"; do
    go install "${i}@latest"
  done
}

# FIXME: Установить токен HOMEBREW_GITHUB_API_TOKEN перед продолжением

if ! which -s brew; then
  sudo -v
  title "Homebrew: установка"
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  install_packages
  configure
else
  if [ $CONFIGURE ]; then
    sudo -v
  fi
  if [ $INSTALL_PACKAGES ]; then
    install_packages
  fi
  if [ $CONFIGURE ]; then
    configure
  fi
  title "Homebrew: обновление пакетов"
  brew update
  brew upgrade
fi

if ! fish -c "type -q fisher"; then
  title "fisher: установка"
  curl https://git.io/fisher --create-dirs -sLo ~/.config/fish/functions/fisher.fish
fi

title "fisher: обновление пакетов"
fish -c "fisher update"

declare -a NPM_PACKAGES=(
  bash-language-server
  dockerfile-language-server-nodejs
  neovim
  pyright
  typescript-language-server
  vim-language-server
)
title "npm: установка и обновление пакетов ${NPM_PACKAGES[@]}"
npm -g i ${NPM_PACKAGES[@]}

if ! witch -s rustup; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  rustup completions fish > ~/.config/fish/completions/rustup.fish
fi
