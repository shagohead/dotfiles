lua require('plugins')

" –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π.
set noautoread
set path+=**
set grepprg=rg\ --vimgrep
set wildignore+=*.pyc
set undofile

" –í–≤–æ–¥.
set linebreak
set smartcase
set ignorecase
set keymap=russian-jcukenmac
set iminsert=0
set completeopt=menuone,noinsert,noselect,preview
set concealcursor=c
let mapleader = ' '
let maplocalleader = ' '

" –ü–æ–≤–µ–¥–µ–Ω–∏–µ UI.
set splitbelow
set splitright
set scrolloff=1
set numberwidth=2
set updatetime=250
set mouse=a
set guifont=Iosevka\ Nerd\ Font:h14
set spelllang=ru_yo,en_us
set foldmethod=indent
set foldlevelstart=99
set diffopt+=foldcolumn:0
if winwidth(0) < 200
  set diffopt-=vertical
  set diffopt+=horizontal
else
  set diffopt-=horizontal
  set diffopt+=vertical
endif

" –†–∞–∑–±–∏–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏.
if has('patch-7.4.338')
	set breakindent
	set breakindentopt=sbr
	let &showbreak = nr2char(8618).' ' " ‚Ü™ –≤–Ω–∞—á–∞–ª–µ —Ä–∞–∑–±–∏—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
endif

" –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞.
set title
set titlestring=%t%(\ %M%)%(\ (%{expand(\"%:~:.:h\")})%)%(\ %a%)

" –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã Python.
" let g:loaded_python_provider = 0 FIXME: –ø–æ–Ω—è—Ç—å –Ω–∞–¥–æ –ª–∏ —ç—Ç–æ —Ç—É—Ç (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å
" –∑–∞–ø—É—Å–∫ –≤–∏–º–∞ —Å –ø–∏—Ç–æ–Ω–æ–≤—Å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ –∏ –±–µ–∑)
if empty(glob(expand('~/.pyenv/virtualenvs/pynvim/bin/python3'))) == 0
  let g:python3_host_prog = '~/.pyenv/virtualenvs/pynvim/bin/python3'
else
  let g:loaded_python3_provider = 0
end

" –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π.
let s:disabled_built_ins = ['gzip', 'matchit', 'matchparen', 'shada_plugin', 'tar', 'tarPlugin', 'zip', 'zipPlugin']
for n in s:disabled_built_ins
	exec 'let g:loaded_'.n.' = 1'
endfor

sign define DiagnosticSignError text=Ôôô texthl=DiagnosticSignError
sign define DiagnosticSignWarn text=Ôî© texthl=DiagnosticSignWarn
sign define DiagnosticSignInfo text=Ôüº texthl=DiagnosticSignInfo
sign define DiagnosticSignHint text=Ô†µ texthl=DiagnosticSignHint

" –ê–≤—Ç–æ–∫–æ–º–∞–Ω–¥—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∏—Ö.
augroup vimrc
	autocmd!
	au BufNewFile,BufRead flake8,pycodestyle setf dosini
	au BufNewFile,BufRead .gitconfig.* setf gitconfig
	au BufNewFile,BufRead *init*.lua nmap K <Cmd>execute "help ".expand("<cword>")<CR>
	au ColorScheme * call UpdateColors()
	au FileType fish setlocal cms=#\ %s
	au FileType fish,gitconfig,sql setlocal ts=4 sw=4 sts=4 et
	au FileType go setlocal noet fo+=ro nowrap
	au FileType GV nmap <buffer> o .show<CR>
	au FileType go,html,htmldjango,javascript,lua,markdown,yaml,vim setlocal ts=2 sw=2 sts=2
	au FileType lua,vim setlocal nowrap
	au FileType lua,vim nmap <buffer> <Leader>G <Cmd>execute "!open https://github.com/".expand("<cfile>")<CR>
	au FileType markdown nmap <buffer> <Leader>J <Cmd>execute "!open https://j.jetstyle.in/browse/".expand("<cWORD>")<CR>
	au FileType markdown nmap <buffer> <Leader>M <Cmd>execute "!open https://gitlab.jetstyle.in/jetstyle/nti/talent-backend/-/merge_requests/".expand("<cword>")<CR>
	au FileType markdown setlocal fo-=l fo+=o
	au FileType python setlocal dict+=~/.config/nvim/dictionary/python fo-=t fo+=ro tw=88
	au FileType sql nmap <buffer> <Leader>= <Cmd>%!pg_format<CR>
	au FileType sql nmap <buffer> <CR> <Cmd>%DB<CR>
	au FileType sql xmap <buffer> <CR> <Cmd>'<,'>DB<CR>
	au FileType sql setlocal cms=--\ %s
	au InsertEnter * set cc=+1
	au InsertLeave * set cc=
	au VimEnter * call BindDiffSplit()
	au VimResized * call UpdateWindowOptions()
augroup END

function! BindDiffSplit()
	if len($DIFF_BASE)
		nmap <Leader>d :exec ':Gdiffsplit '.$DIFF_BASE<CR>
		command! -nargs=0 DiffBaseSplit execute ':Gdiffsplit '.$DIFF_BASE
	endif
endfunction

function! UpdateColors()
  hi DiffAdd ctermfg=NONE guifg=NONE
  hi DiffChange ctermfg=NONE guifg=NONE
  hi DiffText ctermfg=NONE guifg=NONE
  hi Folded ctermbg=NONE guibg=NONE
  hi GitGutterAdd ctermbg=NONE guibg=NONE
  hi GitGutterChange ctermbg=NONE guibg=NONE
  hi GitGutterDelete ctermbg=NONE guibg=NONE
  hi SignColumn ctermbg=NONE guibg=NONE
  hi TabLine ctermbg=NONE guibg=NONE
  hi TabLineFill ctermbg=NONE guibg=NONE
  hi TabLineSel ctermbg=NONE guibg=NONE
	hi TSDefinition cterm=reverse
	hi VertSplit ctermbg=NONE guibg=NONE
endfunction

function! UpdateWindowOptions()
	if &columns < 200
		set diffopt-=vertical
		set diffopt+=horizontal
	else
		set diffopt-=horizontal
		set diffopt+=vertical
	endif
endfunction

" FIXME: –Ω–∞–π—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å
function! CheckBackSpace()
	let col = col('.') - 1
	return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö.
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

" –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –∏–∑ base16-shell.
if empty(glob(expand('~/.vimrc_background'))) == 0
    let base16colorspace = 256
    source ~/.vimrc_background
endif

" –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ <C-L> –æ—á–∏—Å—Ç–∫–æ–π –ø–æ–∏—Å–∫–∞ –∏ –∞–ø–¥–µ–π—Ç–æ–º –¥–∏—Ñ—Ñ–∞.
if has('nvim-0.6') == 0
	nnoremap <silent> <C-L> :noh<C-R>=has("diff")?"<Bar>diffupdate":""<CR><CR><C-L>
end

" –°–º–µ–Ω–∞ —Ñ–∞–π–ª–∞ –ø–æ <C-H> –≤–º–µ—Å—Ç–æ <C-^> –≤ normal.
nnoremap  
" –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ langmap –≤ normal –Ω–∞ <C-^>, –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å i_CTRL-^ (–∏ c_CTRL-^).
nnoremap  a

" –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ terminal
tnoremap <Esc><Esc> <C-\><C-n>

" <C-G> –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∞ –µ—â–µ –µ—Å—Ç—å <G><C-G>).
nnoremap <C-G><C-G> <C-G>

" –ó–∞–∫—Ä—ã—Ç–∏–µ tabpage
nnoremap <C-W><S-c> <Cmd>tabclose<CR>

" –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –¥–ª—è <"+> –∏ <"0>
nnoremap <M-y> "+
xnoremap <M-y> "+
nnoremap <M-p> "0
xnoremap <M-p> "0

" –î–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–µ—Ä–µ–¥ –Ω–∏–º–∏,
" –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏–∑ tpope/vim-surround.
nnoremap I 2i
xnoremap I 2i

" Y —Ä–∞–±–æ—Ç–∞—é—â–∏–π –∫–∞–∫ D, —Ç.–µ. —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –∏ –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.
if has('nvim-0.6') == 0
	nnoremap Y y$
end

" –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ø–∏—Å–∫–∞ QuickFix.
nnoremap [q <Cmd>cp<CR>
nnoremap ]q <Cmd>cn<CR>

" –†–µ—Å–∞–π–∑ –æ–∫–Ω–∞ –ø–æ –∫–æ–ª-–≤—É —Å—Ç—Ä–æ–∫.
nnoremap <C-W>0 <Cmd>execute ":resize".line("$")<CR>

" –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞–∫—Ä–æ—Å–∞ –≤ VISUAL.
xnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>

function! ExecuteMacroOverVisualRange() abort
  echo "@".getcmdline()
  execute ":'<,'>normal @".nr2char(getchar())
endfunction

" –ü–æ–∏—Å–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–∏–ª–µ–π merge –¥–∏—Ñ—Ñ–æ–≤.
nnoremap <Leader>c /\\(<\\<Bar>>\\<Bar>=\\<Bar><Bar>\\)\\{7}<CR>

command! -nargs=0 Grep execute ':grep '.expand('<cword>')
command! -nargs=0 OpenFileDir silent call system('open '.expand('%:p:h:~'))
command! -nargs=0 FilePathEcho echo expand('%:p')
command! -nargs=0 FilePathCopy let @+ = expand('%:p')

" TODO: <Leader>q –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–∫–Ω–∞ qf.
